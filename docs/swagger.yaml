basePath: /api/v1
definitions:
  models.Todo:
    properties:
      completed:
        type: boolean
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.TodoCreate:
    properties:
      description:
        type: string
      title:
        type: string
    required:
    - title
    type: object
  models.TodoUpdate:
    properties:
      completed:
        type: boolean
      description:
        type: string
      title:
        type: string
    type: object
host: localhost:3035
info:
  contact: {}
  description: A RESTful API for managing todos
  title: Todo API
  version: "1.0"
paths:
  /todos:
    get:
      consumes:
      - application/json
      description: Get all todos
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Todo'
            type: array
      summary: Get all todos
      tags:
      - todos
    post:
      consumes:
      - application/json
      description: Create a new todo with the provided data
      parameters:
      - description: Todo data
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/models.TodoCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Todo'
        "400":
          description: Bad request
          schema:
            type: string
      summary: Create a new todo
      tags:
      - todos
  /todos/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a todo by ID
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "404":
          description: Todo not found
          schema:
            type: string
      summary: Delete a todo
      tags:
      - todos
    get:
      consumes:
      - application/json
      description: Get a specific todo by ID
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Todo'
        "404":
          description: Todo not found
          schema:
            type: string
      summary: Get a todo by ID
      tags:
      - todos
    put:
      consumes:
      - application/json
      description: Update a todo with the provided data
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      - description: Todo data to update
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/models.TodoUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Todo'
        "400":
          description: Bad request
          schema:
            type: string
        "404":
          description: Todo not found
          schema:
            type: string
      summary: Update a todo
      tags:
      - todos
swagger: "2.0"
